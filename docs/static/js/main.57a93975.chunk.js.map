{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","handleInputChange","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","console","log","GifExpertApp","categories","setCategories","cate","ReactDOM","render","document","getElementById"],"mappings":"iLAGaA,EAAc,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAa,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACrCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAAW,SAACP,IAjBE,SAACA,GACvBF,EAAcE,EAAEQ,OAAOF,OAgBGG,CAAkBT,S,+BCxBvCU,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVtB,kBAaZM,GAbY,4CAAH,sDCEL,SAASO,EAAT,GAAsC,IAAfH,EAAc,EAAdA,MAAOV,EAAO,EAAPA,IACzC,OACI,sBAAKc,UAAU,2DAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAKA,OCDV,IAAMO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAGtB,ECLwB,SAAEA,GAC1B,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAsBA,OAjBAC,qBAAW,WACPxB,EAASC,GACRwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGlB,CAACpB,IASGqB,EDlB2BK,CAAa1B,GAAjCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QAGtB,OAFAO,QAAQC,IAAKR,GAGT,qCACI,6BAAMpB,IACJoB,GAAW,2CACb,qBAAKJ,UAAU,YAAf,SACKH,EAAOJ,KAAK,SAAAC,GAAG,OACZ,cAACK,EAAD,eAAgCL,GAAbA,EAAIC,aEb9BkB,EAAe,WAGxB,MAAoC5C,mBAAS,CAAC,gBAA9C,mBAAO6C,EAAP,KAAmBC,EAAnB,KAMA,OACI,qCACI,8CACA,uBACA,cAAC,EAAD,CAAa/C,YAAa+C,IAC1B,6BACMD,EAAWrB,KAAI,SAACuB,GAAD,OACb,cAAC,EAAD,CACIhC,SAAWgC,GACLA,YCjB9BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.57a93975.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport propTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategory}) => {\r\n\r\n    const [inputValue, setInputValue] = useState(\"\")\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if( inputValue.trim().length > 2){\r\n            setCategory( cats => [inputValue, ...cats])\r\n            setInputValue(\"\")\r\n        }\r\n    } \r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ (e)=>{ handleInputChange(e); } }/>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategory: propTypes.func.isRequired\r\n}\r\n","export const getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=10&api_key=5fvgGaL3EZkvPj8nlBQsu3pDcDxlvHBh`\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json()\r\n    \r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs\r\n}","import React from 'react'\r\n\r\nexport default function GifGridItem( {title, url} ) {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce animate__delay-2s\">\r\n            <img src={url} alt={title}/>\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n// import { getGifs } from '../helpers/getGifs'\r\nimport GifGridItem from './GifGridItem'\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n\r\n    // const [images, setImages] = useState([])\r\n    const { data: images, loading } = useFetchGifs(category)\r\n    console.log( loading );\r\n\r\n    return (\r\n        <>\r\n            <h3>{ category }</h3>\r\n            { loading && <p>Loading...</p>}\r\n            <div className=\"card-grid\">\r\n                {images.map( img => \r\n                    <GifGridItem key={ img.id } {...img}/>\r\n                )}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n        .then(imgs=>{\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            })\r\n        })\r\n    }, [category])\r\n\r\n    // setTimeout(() => {\r\n    //     setState({\r\n    //         data: [1,2,3,4],\r\n    //         loading: false\r\n    //     })\r\n    // }, 3000);\r\n\r\n    return state\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories = ['Samuxai X', 'Dragon Ball']\r\n    const [categories, setCategories] = useState(['Dragon Ball'])\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories( cats => [...cats, \"Hola mundo\"])\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <hr/>\r\n            <AddCategory setCategory={setCategories}/>\r\n            <ol>\r\n                { categories.map((cate) => \r\n                    <GifGrid \r\n                        category={ cate }\r\n                        key={ cate } />\r\n                )}\r\n            </ol>\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp/>,\n  document.getElementById('root')\n);"],"sourceRoot":""}